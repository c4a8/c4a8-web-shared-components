$font-style-map: (
  'font-size-sm': '%font-size-sm',
  'font-size-1': '%font-size-1',
  'font-size-2': '%font-size-2',
  'font-size-3': '%font-size-3',
  'font-size-4': '%font-size-4',
  'font-size-5': '%font-size-5',
  'font-size-6': '%font-size-6',
  'font-size-7': '%font-size-7',
  'font-size-8': '%font-size-8',
  'h1-font-size': '%h1-font-size',
  'h2-font-size': '%h2-font-size',
  'h3-font-size': '%h3-font-size',
  'h4-font-size': '%h4-font-size',
);

@function is-important($important) {
  @return #{if($important, '!important', '')};
}

@mixin font-mods($weight: 'light') {
  @if $weight == 'light' {
    & {
      font-weight: 100 !important;
    }

    strong {
      font-weight: inherit;
    }
  }
}

@mixin font-weight($weight, $important: false) {
  $important-string: is-important($important);

  @if $weight == 'bold' {
    & {
      font-weight: bold #{$important-string};
    }
  } @else if $weight == 'normal' {
    & {
      font-weight: 400 #{$important-string};
    }
  } @else if $weight == 'light' {
    @include font-mods('light');
  }
}

@mixin line-height($height: 'normal', $important: false) {
  $important-string: is-important($important);

  & {
    @if $height == 'thin' {
      line-height: 1.2em #{$important-string};
    } @else if $height == 'wide' {
      line-height: 1.7em #{$important-string};
    } @else if $height == 'extra-wide' {
      line-height: 1.9em #{$important-string};
    } @else if $height == 'middle' {
      line-height: 1.4em #{$important-string};
    } @else {
      line-height: var(--type-default-line-height) #{$important-string};
    }
  }
}

// Font size maps for each prefix
$font-size-map: (
  'h1-font-size': (
    'xl': $h1-font-size-xl,
    'lg': $h1-font-size-lg,
    'sm': $h1-font-size-sm,
  ),
  'h2-font-size': (
    'xl': $h2-font-size-xl,
    'lg': $h2-font-size-lg,
    'sm': $h2-font-size-sm,
  ),
  'h3-font-size': (
    'xl': $h3-font-size-xl,
    'lg': $h3-font-size-lg,
    'sm': $h3-font-size-sm,
  ),
  'h4-font-size': (
    'xl': $h4-font-size-xl,
    'lg': $h4-font-size-lg,
    'sm': $h4-font-size-sm,
  ),
  'font-size-1': (
    'xl': $font-size-1-xl,
    'lg': $font-size-1-lg,
    'sm': $font-size-1-sm,
  ),
  'font-size-2': (
    'xl': $font-size-2-xl,
    'lg': $font-size-2-lg,
    'sm': $font-size-2-sm,
  ),
  'font-size-3': (
    'xl': $font-size-3-xl,
    'lg': $font-size-3-lg,
    'sm': $font-size-3-sm,
  ),
  'font-size-4': (
    'xl': $font-size-4-xl,
    'lg': $font-size-4-lg,
    'sm': $font-size-4-sm,
  ),
  'font-size-5': (
    'xl': $font-size-5-xl,
    'lg': $font-size-5-lg,
    'sm': $font-size-5-sm,
  ),
  'font-size-6': (
    'xl': $font-size-6-xl,
    'lg': $font-size-6-lg,
    'sm': $font-size-6-sm,
  ),
  'font-size-7': (
    'xl': $font-size-7-xl,
    'lg': $font-size-7-lg,
    'sm': $font-size-7-sm,
  ),
  'font-size-8': (
    'xl': $font-size-8-xl,
    'lg': $font-size-8-lg,
    'sm': $font-size-8-sm,
  ),
);

// Line height maps for each prefix
$line-height-map: (
  'h1-font-size': (
    'xl': $h1-line-height-xl,
    'lg': $h1-line-height-lg,
    'sm': $h1-line-height-sm,
  ),
  'h2-font-size': (
    'xl': $h2-line-height-xl,
    'lg': $h2-line-height-lg,
    'sm': $h2-line-height-sm,
  ),
  'h3-font-size': (
    'xl': $h3-line-height-xl,
    'lg': $h3-line-height-lg,
    'sm': $h3-line-height-sm,
  ),
  'h4-font-size': (
    'xl': $h4-line-height-xl,
    'lg': $h4-line-height-lg,
    'sm': $h4-line-height-sm,
  ),
  'font-size-1': (
    'xl': $font-size-1-line-height-xl,
    'lg': $font-size-1-line-height-lg,
    'sm': $font-size-1-line-height-sm,
  ),
  'font-size-2': (
    'xl': $font-size-2-line-height-xl,
    'lg': $font-size-2-line-height-lg,
    'sm': $font-size-2-line-height-sm,
  ),
  'font-size-3': (
    'xl': $font-size-3-line-height-xl,
    'lg': $font-size-3-line-height-lg,
    'sm': $font-size-3-line-height-sm,
  ),
  'font-size-4': (
    'xl': $font-size-4-line-height-xl,
    'lg': $font-size-4-line-height-lg,
    'sm': $font-size-4-line-height-sm,
  ),
  'font-size-5': (
    'xl': $font-size-5-line-height-xl,
    'lg': $font-size-5-line-height-lg,
    'sm': $font-size-5-line-height-sm,
  ),
  'font-size-6': (
    'xl': $font-size-6-line-height-xl,
    'lg': $font-size-6-line-height-lg,
    'sm': $font-size-6-line-height-sm,
  ),
  'font-size-7': (
    'xl': $font-size-7-line-height-xl,
    'lg': $font-size-7-line-height-lg,
    'sm': $font-size-7-line-height-sm,
  ),
  'font-size-8': (
    'xl': $font-size-8-line-height-xl,
    'lg': $font-size-8-line-height-lg,
    'sm': $font-size-8-line-height-sm,
  ),
);

@mixin font-size-all-breakpoints($size-prefix) {
  @include font-size-breakpoints($size-prefix, 'sm');

  @include media-breakpoint-up(lg) {
    @include font-size-breakpoints($size-prefix, 'lg');
  }

  @include media-breakpoint-up(xl) {
    @include font-size-breakpoints($size-prefix, 'xl');
  }
}

@mixin font-size-breakpoints($size-prefix, $breakpoint: false) {
  $breakpoint-key: if($breakpoint == 'lg' or $breakpoint == 'xl', $breakpoint, 'sm');

  font-size: map-get(map-get($font-size-map, $size-prefix), $breakpoint-key);
  line-height: map-get(map-get($line-height-map, $size-prefix), $breakpoint-key);
}

@mixin h1-breakpoints($breakpoint: false) {
  @include font-size-breakpoints('h1-font-size', $breakpoint);
}

@mixin h2-breakpoints($breakpoint: false) {
  @include font-size-breakpoints('h2-font-size', $breakpoint);

  @if $breakpoint != 'lg' and $breakpoint != 'xl' {
    font-weight: lighter;
  }
}

@mixin h3-breakpoints($breakpoint: false) {
  @include font-size-breakpoints('h3-font-size', $breakpoint);

  @if $breakpoint != 'lg' and $breakpoint != 'xl' {
    font-weight: lighter;
  }
}

@mixin h4-breakpoints($breakpoint: false) {
  @include font-size-breakpoints('h4-font-size', $breakpoint);

  @if $breakpoint != 'lg' and $breakpoint != 'xl' {
    font-weight: normal;
  }
}

@mixin h1 {
  @include h1-breakpoints($breakpoint: 'sm');

  @include media-breakpoint-up(lg) {
    @include h1-breakpoints($breakpoint: 'lg');
  }

  @include media-breakpoint-up(xl) {
    @include h1-breakpoints($breakpoint: 'xl');
  }
}

@mixin h2 {
  @include h2-breakpoints;

  @include media-breakpoint-up(lg) {
    @include h2-breakpoints($breakpoint: 'lg');
  }

  @include media-breakpoint-up(xl) {
    @include h2-breakpoints($breakpoint: 'xl');
  }
}

@mixin h3 {
  @include h3-breakpoints;

  @include media-breakpoint-up(lg) {
    @include h3-breakpoints($breakpoint: 'lg');
  }

  @include media-breakpoint-up(xl) {
    @include h3-breakpoints($breakpoint: 'xl');
  }
}

@mixin h4 {
  @include h4-breakpoints;

  @include media-breakpoint-up(lg) {
    @include h4-breakpoints($breakpoint: 'lg');
  }

  @include media-breakpoint-up(xl) {
    @include h4-breakpoints($breakpoint: 'xl');
  }
}

@mixin font-size-xs($breakpoint: false) {
  font-size: $font-size-xs;
}

@mixin font-size-sm($breakpoint: false) {
  font-size: $font-size-sm;
}

@mixin font-size-1() {
  @include font-size-all-breakpoints('font-size-1');
}

@mixin font-size-2() {
  @include font-size-all-breakpoints('font-size-2');
}

@mixin font-size-3() {
  @include font-size-all-breakpoints('font-size-3');
}

@mixin font-size-4() {
  @include font-size-all-breakpoints('font-size-4');
}

@mixin font-size-5() {
  @include font-size-all-breakpoints('font-size-5');
}

@mixin font-size-6($breakpoint: false) {
  @include font-size-all-breakpoints('font-size-6');

  @if $breakpoint == 'lg' {
    margin-left: -5px;
  }
}

@mixin font-size-7($breakpoint: false) {
  @if $breakpoint == 'lg' {
    font-size: $font-size-7-lg;
    line-height: $font-size-7-line-height-lg;
    margin-left: -15px;
  } @else if $breakpoint == 'xl' {
    font-size: $font-size-7-xl;
    line-height: $font-size-7-line-height-xl;
    margin-left: -5px;
  } @else {
    font-size: $font-size-7-sm;
    line-height: $font-size-7-line-height-sm;
    margin-left: -5px;
  }
}

@mixin font-style($style, $weight: null, $line: null) {
  $map: $font-style-map;
  $selector: map-get($map, $style);
  $valid-selector: map-has-key($map, $style);

  & {
    @if $valid-selector {
      @if $style == 'font-size-sm' {
        @include font-size-sm;
      } @else if $style == 'font-size-1' {
        @include font-size-1;
      } @else if $style == 'font-size-2' {
        @include font-size-2;
      } @else if $style == 'font-size-3' {
        @include font-size-3;
      } @else if $style == 'font-size-4' {
        @include font-size-4;
      } @else if $style == 'font-size-5' {
        @include font-size-5;
      } @else if $style == 'font-size-6' {
        @include font-size-6;
      } @else if $style == 'font-size-7' {
        @include font-size-7;
      } @else if $style == 'h1-font-size' {
        @include h1;
      } @else if $style == 'h2-font-size' {
        @include h2;
      } @else if $style == 'h3-font-size' {
        @include h3;
      } @else if $style == 'h4-font-size' {
        @include h4;
      } @else {
        @extend #{$selector};
      }

      @if $weight {
        @include font-weight($weight: $weight, $important: true);
      }

      @if $line {
        @include line-height($height: $line, $important: true);
      }
    }
  }
}

@mixin font-size-custom($sm: false, $md: false, $lg: false, $xl: false, $important: false) {
  $important-string: is-important($important);

  @if ($sm) {
    font-size: $sm #{$important-string};
  }

  @if ($md) {
    @include media-breakpoint-up(md) {
      font-size: $md #{$important-string};
    }
  }

  @if ($lg) {
    @include media-breakpoint-up(lg) {
      font-size: $lg #{$important-string};
    }
  }

  @if ($xl) {
    @include media-breakpoint-up(xl) {
      font-size: $xl #{$important-string};
    }
  }
}

.shared-components {
  %h1,
  .h1,
  h1 {
    @include h1;
  }

  %h1,
  %h2,
  %h3,
  %h4,
  %h5,
  %h6,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6 {
    color: var(--color-headlines);
    margin-top: 0;
    margin-bottom: spacing(2);
    line-height: $default-line-height-headlines;
  }

  %font-size-xs,
  %font-size-sm,
  %font-size-1,
  %font-size-2,
  %font-size-3,
  %font-size-4,
  %font-size-5,
  %font-size-6,
  %font-size-7,
  %font-size-8,
  %h1-font-size,
  %h2-font-size,
  %h3-font-size,
  %h4-font-size,
  %h5-font-size,
  %h6-font-size,
  .font-size-xs,
  .font-size-sm,
  .font-size-1,
  .font-size-2,
  .font-size-3,
  .font-size-4,
  .font-size-5,
  .font-size-6,
  .font-size-7,
  .font-size-8,
  .h1-font-size,
  .h2-font-size,
  .h3-font-size,
  .h4-font-size,
  .h5-font-size,
  .h6-font-size {
    &.bold {
      font-weight: bold !important;
    }

    &.normal {
      font-weight: 400 !important;
    }

    &.light {
      @include font-mods('light');
    }

    &.wide {
      @include line-height('wide');
    }

    &.middle {
      @include line-height('middle');
    }

    &.thin {
      @include line-height('thin');
    }
  }

  %h1-font-size,
  h1,
  .h1-font-size {
    @include h1;
  }

  %h2-font-size,
  h2,
  .h2-font-size {
    @include h2;
  }

  %h3-font-size,
  h3,
  .h3-font-size {
    @include h3;
  }

  %h4-font-size,
  h4,
  .h4-font-size {
    @include h4;
  }

  .text-white {
    %h1,
    %h2,
    %h3,
    %h4,
    %h5,
    %h6,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    .h1,
    .h2,
    .h3,
    .h4,
    .h5,
    .h6 {
      color: var(--color-white);
    }
  }

  .text-orange {
    color: var(--color-orange);
  }

  .text-green-blue {
    color: var(--color-green-blue);

    &%h1,
    &%h2,
    &%h3,
    &%h4,
    &%h5,
    &%h6,
    &.h1,
    &.h2,
    &.h3,
    &.h4,
    &.h5,
    &.h6 {
      color: var(--color-green-blue);
    }
  }

  .highlight-orange {
    background-color: var(--color-orange);
    padding: 0 0 3px;
  }

  .highlight-yellow {
    background-color: var(--color-yellow);
    padding: 0 0 3px;
  }

  .highlight {
    background-color: var(--color-primary);
    padding: 0 0 3px;
  }

  .highlight-underline {
    @include text-highlight;
  }

  .highlight-animated {
    @include background-grow($color: var(--color-highlight-animated), $spacing: spacing(0));

    &::before {
      max-width: 100%;
    }
  }

  .lead {
    font-size: $font-size-lg;
  }

  %font-size-sm,
  .font-size-sm {
    @include font-size-sm;
  }

  %font-size-xs,
  .font-size-xs {
    @include font-size-xs;
  }

  .is-error,
  %font-size-1,
  .font-size-1 {
    @include font-size-1;
  }

  %font-size-2,
  .font-size-2 {
    @include font-size-2;
  }

  %font-size-3,
  .font-size-3 {
    @include font-size-3;
  }

  %font-size-4,
  .font-size-4 {
    @include font-size-4;
  }

  %font-size-5,
  .font-size-5 {
    @include font-size-5;
  }

  %font-size-6,
  .font-size-6 {
    @include font-size-6;
  }

  %font-size-7,
  .font-size-7 {
    @include font-size-7;
  }

  %font-size-8,
  .font-size-8 {
    @include font-size-custom($sm: $font-size-8-sm, $lg: $font-size-8-lg);
  }

  .is-error {
    color: var(--color-form-error);
    font-weight: bold;
  }
}

:root {
  --type-default-line-height: #{$default-line-height};
}

// TODO refactor with @layer
